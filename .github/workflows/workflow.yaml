name: Daily Commit

on:
  schedule:
    - cron: '*/5 * * * *'  # Runs every 5 minutes

jobs:
  daily-commit:
    runs-on: ubuntu-latest

    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests jq

      - name: Get Latest Commit Information
        id: latest_commit_info
        run: |
          repo_url=$(git config --get remote.origin.url)
          repo_name=$(basename -s .git $repo_url)
          commit_sha=$(git rev-parse HEAD)
          commit_info=$(curl -s -H "Authorization: token ${{ secrets.PERSONAL_ACCESS_TOKEN }}" "https://api.github.com/repos/$repo_name/commits/$commit_sha")
          tree_sha=$(echo "$commit_info" | jq -r '.commit.tree.sha')

          if [[ -z "$tree_sha" || ! $tree_sha =~ ^[0-9a-f]{40}$ ]]; then
            echo "Error: Invalid or missing tree SHA: $tree_sha"
            exit 1
          fi

          echo "::set-output name=tree_sha::$tree_sha"

      - name: Run Daily Commit
        run: |
          python - <<EOF
          import requests
          from datetime import datetime

          # Your GitHub username and repository
          username = "${{ secrets.USERNAME }}"
          repo_name = "${{ github.repository }}"
          
          # GitHub API endpoint for creating a commit
          commit_url = f"https://api.github.com/repos/{username}/{repo_name}/git/commits"

          # Current date and time
          current_datetime = datetime.now()

          # Commit message
          commit_message = f"Daily commit - {current_datetime.strftime('%Y-%m-%d %H:%M:%S')}"

          # Get the SHA of the latest commit and its tree
          latest_commit_sha = "$(git rev-parse HEAD)"
          latest_commit_tree_sha = "${{ steps.latest_commit_info.outputs.tree_sha }}"

          # Check if tree SHA is valid
          if [[ -z "$latest_commit_tree_sha" || ! $latest_commit_tree_sha =~ ^[0-9a-f]{40}$ ]]; then
            echo "Error: Invalid or missing tree SHA: $latest_commit_tree_sha"
            exit 1
          fi

          # Data for the commit
          commit_data = {
              "message": commit_message,
              "tree": latest_commit_tree_sha,
              "parents": [latest_commit_sha]
          }

          # Convert data to JSON
          commit_data_json = {
              "message": commit_data["message"],
              "tree": commit_data["tree"],
              "parents": commit_data["parents"]
          }

          # Make the API request to create the commit
          response = requests.post(commit_url, json=commit_data_json, headers={"Authorization": f"token ${{ secrets.PERSONAL_ACCESS_TOKEN }}"})

          # Print the response
          print(response.text)
          EOF
        env:
          USERNAME: ${{ secrets.USERNAME }}
